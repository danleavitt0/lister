'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _removeAttribute = require('./removeAttribute');

var _removeAttribute2 = _interopRequireDefault(_removeAttribute);

var _isValidAttr = require('@f/is-valid-attr');

var _isValidAttr2 = _interopRequireDefault(_isValidAttr);

var _applyStyles = require('@f/apply-styles');

var _applyStyles2 = _interopRequireDefault(_applyStyles);

var _setAttribute = require('@f/set-attribute');

var _setAttribute2 = _interopRequireDefault(_setAttribute);

var _focusElement = require('@f/focus-element');

var _focusElement2 = _interopRequireDefault(_focusElement);

var _setValue = require('@f/set-value');

var _setValue2 = _interopRequireDefault(_setValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Set an attribute on an element
 */

/**
 * Imports
 */

function setAttribute(node, name, value, prevValue) {
  if (typeof value === 'function') {
    value(node, name);
    return;
  }

  if (name === 'style') {
    (0, _applyStyles2.default)(node, value, prevValue);
  } else if ((0, _isValidAttr2.default)(value)) {
    switch (name) {
      case 'autofocus':
        if (value && value !== prevValue) {
          setTimeout(function () {
            return (0, _focusElement2.default)(node);
          });
        }
        break;
      case 'nodeValue':
      case 'checked':
      case 'disabled':
      case 'selected':
      case 'innerHTML':
      case 'textContent':
      case 'defaultValue':
      case 'defaultChecked':
        node[name] = value;
        break;
      case 'value':
        (0, _setValue2.default)(node, value);
        break;
      default:
        (0, _setAttribute2.default)(node, name, value);
        break;
    }
  } else {
    (0, _removeAttribute2.default)(node, name, prevValue);
  }
}

/**
 * Exports
 */

exports.default = setAttribute;