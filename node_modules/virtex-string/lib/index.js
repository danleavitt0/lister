'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ent = require('ent');

var _ent2 = _interopRequireDefault(_ent);

var _has = require('@f/has');

var _has2 = _interopRequireDefault(_has);

var _virtex = require('virtex');

var _reduceArray = require('@f/reduce-array');

var _reduceArray2 = _interopRequireDefault(_reduceArray);

var _selfClosingTags = require('@f/self-closing-tags');

var _selfClosingTags2 = _interopRequireDefault(_selfClosingTags);

var _stringifyAttrs = require('@f/stringify-attrs');

var _stringifyAttrs2 = _interopRequireDefault(_stringifyAttrs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Actions
 */

/**
 * Imports
 */

var _actions$types = _virtex.actions.types;
var CREATE_NODE = _actions$types.CREATE_NODE;
var UPDATE_NODE = _actions$types.UPDATE_NODE;

/**
 * Skippable attributes
 */

var skipAttrs = {
  innerHTML: true,
  textContent: true,
  nodeValue: true
};

/**
 * Virtex string
 */

function string() {
  return function (next) {
    return function (action) {
      if (action.type === CREATE_NODE || action.type === UPDATE_NODE) {
        var vnode = action.vnode;
        var children = action.children;

        vnode.element = render(vnode, children);
        return vnode;
      }

      return next(action);
    };
  };
}

function render(_ref, children) {
  var type = _ref.type;
  var props = _ref.props;

  return type === '#text' ? _ent2.default.encode(String(props.nodeValue)) : stringifyElement(type, props, (0, _reduceArray2.default)(function (acc, child) {
    return acc + child.element;
  }, '', children));
}

function stringifyElement(tag, attrs, contents) {
  if (attrs && (0, _has2.default)('innerHTML', attrs) && !contents) {
    contents = attrs.innerHTML;
  }

  var attrStr = (0, _stringifyAttrs2.default)(attrs, skipAttrs);

  return _selfClosingTags2.default.index[tag] && !contents ? '<' + tag + attrStr + ' />' : '<' + tag + attrStr + '>' + contents + '</' + tag + '>';
}

/**
 * Exports
 */

exports.default = string;