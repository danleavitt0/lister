'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _element = require('vdux/element');

var _element2 = _interopRequireDefault(_element);

var _Overlay = require('./Overlay');

var _Overlay2 = _interopRequireDefault(_Overlay);

var _noop = require('@f/noop');

var _noop2 = _interopRequireDefault(_noop);

var _Flex = require('./Flex');

var _Flex2 = _interopRequireDefault(_Flex);

var _Base = require('./Base');

var _Base2 = _interopRequireDefault(_Base);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
                                                                                                                                                                                                                              * Imports
                                                                                                                                                                                                                              */

/**
 * <Overlay/> component
 */

function render(_ref) {
  var props = _ref.props;
  var children = _ref.children;
  var _props$dismissOnClick = props.dismissOnClick;
  var dismissOnClick = _props$dismissOnClick === undefined ? true : _props$dismissOnClick;
  var _props$dismissOnEsc = props.dismissOnEsc;
  var dismissOnEsc = _props$dismissOnEsc === undefined ? true : _props$dismissOnEsc;
  var _props$onDismiss = props.onDismiss;
  var onDismiss = _props$onDismiss === undefined ? _noop2.default : _props$onDismiss;
  var overlayProps = props.overlayProps;

  var rest = _objectWithoutProperties(props, ['dismissOnClick', 'dismissOnEsc', 'onDismiss', 'overlayProps']);

  return (0, _element2.default)(
    _Overlay2.default,
    _extends({ overflowY: 'auto', onClick: dismissOnClick && maybeDismiss, onKeyup: { esc: dismissOnEsc && onDismiss } }, overlayProps),
    (0, _element2.default)(
      _Base2.default,
      _extends({ tag: 'div', bgColor: 'white', w: 520, boxShadow: 'card', margin: '50px auto 0' }, rest),
      children
    )
  );

  function maybeDismiss(e) {
    if (e.target === e.currentTarget) {
      return onDismiss();
    }
  }
}

/**
 * Exports
 */

exports.default = {
  render: render
};