'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _element = require('vdux/element');

var _element2 = _interopRequireDefault(_element);

var _reduce = require('@f/reduce');

var _reduce2 = _interopRequireDefault(_reduce);

var _times = require('@f/times');

var _times2 = _interopRequireDefault(_times);

var _Flex = require('./Flex');

var _Flex2 = _interopRequireDefault(_Flex);

var _map = require('@f/map');

var _map2 = _interopRequireDefault(_map);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
                                                                                                                                                                                                                              * Imports
                                                                                                                                                                                                                              */

/**
 * Grid
 */

function render(_ref) {
  var props = _ref.props;
  var children = _ref.children;
  var _props$itemsPerRow = props.itemsPerRow;
  var itemsPerRow = _props$itemsPerRow === undefined ? 4 : _props$itemsPerRow;
  var columnAlign = props.columnAlign;
  var rowAlign = props.rowAlign;

  var restProps = _objectWithoutProperties(props, ['itemsPerRow', 'columnAlign', 'rowAlign']);

  var columns = toColumns(children, itemsPerRow);

  return (0, _element2.default)(
    _Flex2.default,
    _extends({ align: rowAlign }, restProps),
    (0, _map2.default)(function (items) {
      return (0, _element2.default)(
        _Flex2.default,
        { column: true, align: columnAlign },
        items
      );
    }, columns)
  );
}

/**
 * Helpers
 */

function toColumns(items, n) {
  return (0, _reduce2.default)(function (memo, item, i) {
    if (!memo[i % n]) memo.push([]);
    memo[i % n].push(item);
    return memo;
  }, [], items);
}

/**
 * Exports
 */

exports.default = {
  render: render
};