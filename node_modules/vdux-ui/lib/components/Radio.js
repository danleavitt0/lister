'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _element = require('vdux/element');

var _element2 = _interopRequireDefault(_element);

var _util = require('../util');

var _Block = require('./Block');

var _Block2 = _interopRequireDefault(_Block);

var _Flex = require('./Flex');

var _Flex2 = _interopRequireDefault(_Flex);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _Base = require('./Base');

var _Base2 = _interopRequireDefault(_Base);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
                                                                                                                                                                                                                              * Imports
                                                                                                                                                                                                                              */

/**
 * <Radio/>
 */

function render(_ref) {
  var props = _ref.props;
  var children = _ref.children;
  var name = props.name;
  var _props$label = props.label;
  var label = _props$label === undefined ? children : _props$label;
  var checked = props.checked;
  var disabled = props.disabled;
  var value = props.value;
  var onChange = props.onChange;

  var rest = _objectWithoutProperties(props, ['name', 'label', 'checked', 'disabled', 'value', 'onChange']);

  var _props$btn = props.btn;
  var Btn = _props$btn === undefined ? RadioUi : _props$btn;
  var _props$uiProps = props.uiProps;
  var uiProps = _props$uiProps === undefined ? {} : _props$uiProps;


  return (0, _element2.default)(
    _Flex2.default,
    _extends({ tag: 'label' }, rest, { align: 'start center' }),
    (0, _element2.default)(_Base2.default, {
      tag: 'input',
      type: 'radio',
      hide: true,
      name: name,
      value: value,
      checked: checked,
      disabled: disabled,
      onChange: onChange }),
    (0, _element2.default)(Btn, _extends({ checked: checked, label: label }, uiProps))
  );
}

function RadioUi(_ref2) {
  var props = _ref2.props;
  var checked = props.checked;
  var label = props.label;


  return (0, _element2.default)(
    _Flex2.default,
    { align: 'start center' },
    (0, _element2.default)(_Flex2.default, { circle: true, align: 'center center', sq: 16, border: true, borderColor: checked ? 'green' : '#bbb', bgColor: checked ? 'green' : 'white', mr: 's' }),
    label
  );
}

/**
 * Exports
 */

exports.default = {
  render: render
};