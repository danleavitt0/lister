'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * Imports
                                                                                                                                                                                                                                                                   */

var _util = require('../util');

var _inputAttrs = require('@f/input-attrs');

var _inputAttrs2 = _interopRequireDefault(_inputAttrs);

var _element = require('vdux/element');

var _element2 = _interopRequireDefault(_element);

var _ErrorTip = require('./ErrorTip');

var _ErrorTip2 = _interopRequireDefault(_ErrorTip);

var _Block = require('./Block');

var _Block2 = _interopRequireDefault(_Block);

var _pick = require('@f/pick');

var _pick2 = _interopRequireDefault(_pick);

var _omit = require('@f/omit');

var _omit2 = _interopRequireDefault(_omit);

var _Base = require('./Base');

var _Base2 = _interopRequireDefault(_Base);

var _Text = require('./Text');

var _Text2 = _interopRequireDefault(_Text);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Constants
 */

var inputPropNames = ['tag', 'invalid', 'type', 'name', 'inputProps', 'onInvalid', 'defaultValue', 'defaultChecked'].concat(_inputAttrs2.default);
var filterProps = (0, _omit2.default)(inputPropNames);

/**
 * Input component
 */

function render(_ref) {
  var props = _ref.props;
  var children = _ref.children;
  var message = props.message;
  var name = props.name;
  var label = props.label;
  var labelClass = props.labelClass;
  var _props$labelProps = props.labelProps;
  var labelProps = _props$labelProps === undefined ? {} : _props$labelProps;
  var inputClass = props.inputClass;
  var _props$inputProps = props.inputProps;
  var inputProps = _props$inputProps === undefined ? {} : _props$inputProps;
  var invalid = props.invalid;
  var border = props.border;
  var _props$errorPlacement = props.errorPlacement;
  var errorPlacement = _props$errorPlacement === undefined ? 'left' : _props$errorPlacement;
  var icon = props.icon;

  var filteredProps = filterProps(props);
  var restInputAttrs = (0, _pick2.default)(inputPropNames, props);

  var hasLabel = !!(label || children.length);

  return (0, _element2.default)(
    _Block2.default,
    _extends({
      tag: 'label',
      align: 'start center',
      mb: 's',
      relative: true,
      overflow: 'visible',
      onFocus: [props.onFocus, stopEvent],
      onBlur: [props.onBlur, stopEvent],
      color: invalid ? 'error' : null
    }, filteredProps, {
      'class': (0, _util.classes)(props.class, 'vui-input-container') }),
    hasLabel && (0, _element2.default)(
      _Base2.default,
      _extends({ tag: 'label', 'for': name, 'class': (0, _util.classes)(labelClass, 'vui-label') }, labelProps),
      label || children
    ),
    icon && (0, _element2.default)(_Icon2.default, { name: icon, fs: 's', lh: 'inherit' }),
    (0, _element2.default)(_Base2.default, _extends({
      tag: 'input',
      onBlur: handleEvent,
      onFocus: handleEvent,
      outline: 'none',
      boxSizing: 'border-box',
      fontFamily: 'inherit',
      display: 'block',
      wide: true,
      m: 0,
      color: 'inherit',
      fs: 'inherit',
      type: 'text',
      border: inputProps.border && (invalid ? 'error' : 'border')
    }, restInputAttrs, inputProps, {
      'class': (0, _util.classes)(inputClass, 'vui-input') })),
    message && (0, _element2.default)(_ErrorTip2.default, { placement: errorPlacement, show: invalid, message: message })
  );
}

/**
 * Event simulation
 */

function handleEvent(e) {
  if (!e.bubbles) {
    var newEvent = (0, _util.createEvent)(e.type, true);
    e.target.dispatchEvent(newEvent);
  }
}

function stopEvent(e) {
  e.stopPropagation();
  e._rawEvent.stopPropagation();
}

/**
 * Exports
 */

exports.default = {
  render: render
};